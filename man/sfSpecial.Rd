% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gsSpending.R
\name{sfTruncated}
\alias{sfTruncated}
\alias{sfTrimmed}
\alias{sfGapped}
\title{Truncated, trimmed and gapped spending functions}
\usage{
sfTruncated(alpha, t, param)

sfTrimmed(alpha, t, param)

sfGapped(alpha, t, param)
}
\arguments{
\item{alpha}{Real value \eqn{> 0} and no more than 1. Normally,
\code{alpha=0.025} for one-sided Type I error specification or
\code{alpha=0.1} for Type II error specification. However, this could be set
to 1 if for descriptive purposes you wish to see the proportion of spending
as a function of the proportion of sample size or information.}

\item{t}{A vector of points with increasing values from 0 to 1, inclusive.
Values of the proportion of sample size or information for which the
spending function will be computed.}

\item{param}{a list containing the elements sf (a spendfn object such as
sfHSD), trange (the range over which the spending function increases from 0
to 1; 0 <= trange[1]<trange[2] <=1; for sfGapped, trange[1] must be > 0),
and param (null for a spending function with no parameters or a scalar or
vector of parameters needed to fully specify the spending function in sf).}
}
\value{
An object of type \code{spendfn}. See
\code{vignette("SpendingFunctionOverview")} for further details.
}
\description{
The functions \code{sfTruncated()} and \code{sfTrimmed} apply
any other spending function over a restricted range. This allows eliminating
spending for early interim analyses when you desire not to stop for the bound
being specified; this is usually applied to eliminate early tests for a
positive efficacy finding. The truncation can come late in the trial if you
desire to stop a trial any time after, say, 90 percent of information is
available and an analysis is performed. This allows full Type I error
spending if the final analysis occurs early. Both functions set cumulative
spending to 0 below a 'spending interval' in the interval [0,1], and set
cumulative spending to 1 above this range. \code{sfTrimmed()} otherwise does
not change an input spending function that is specified; probably the
preferred and more intuitive method in most cases. \code{sfTruncated()}
resets the time scale on which the input spending function is computed to the
'spending interval.'

\code{sfGapped()} allows elimination of analyses after some time point in
the trial; see details and examples.

\code{sfTrimmed} simply computes the value of the input spending function
and parameters in the sub-range of [0,1], sets spending to 0 below this
range and sets spending to 1 above this range.

\code{sfGapped} spends outside of the range provided in trange. Below
trange, the input spending function is used. Above trange, full spending is
used; i.e., the first analysis performed above the interval in trange is the
final analysis. As long as the input spending function is strictly
increasing, this means that the first interim in the interval trange is the
final interim analysis for the bound being specified.

\code{sfTruncated} compresses spending into a sub-range of [0,1]. The
parameter \code{param$trange} specifies the range over which spending is to
occur. Within this range, spending is spent according to the spending
function specified in \code{param$sf} along with the corresponding spending
function parameter(s) in \code{param$param}. See example using
\code{sfLinear} that spends uniformly over specified range.
}
\note{
The gsDesign technical manual is available at
  \url{https://keaven.github.io/gsd-tech-manual/}.
}
\references{
Jennison C and Turnbull BW (2000), \emph{Group Sequential
Methods with Applications to Clinical Trials}. Boca Raton: Chapman and Hall.
}
\seealso{
\code{vignette("SpendingFunctionOverview")},
\code{\link{gsDesignCRT}}, \code{vignette("gsDesignCRTPackageOverview")}
}
\author{
Keaven Anderson \email{keaven_anderson@merck.com}
}
\keyword{design}
