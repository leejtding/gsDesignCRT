% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gsSpending.R
\name{sfLinear}
\alias{sfLinear}
\alias{sfStep}
\title{Piecewise Linear and Step Function Spending Functions}
\usage{
sfLinear(alpha, t, param)

sfStep(alpha, t, param)
}
\arguments{
\item{alpha}{Real value \eqn{> 0} and no more than 1. Normally,
\code{alpha=0.025} for one-sided Type I error specification or
\code{alpha=0.1} for Type II error specification. However, this could be set
to 1 if for descriptive purposes you wish to see the proportion of spending
as a function of the proportion of sample size or information.}

\item{t}{A vector of points with increasing values from 0 to 1, inclusive.
Values of the proportion of sample size or information for which the
spending function will be computed.}

\item{param}{A vector with a positive, even length. Values must range from 0
to 1, inclusive. Letting \code{m <- length(param/2)}, the first \code{m}
points in param specify increasing values strictly between 0 and 1
corresponding to interim timing (proportion of final total statistical
information). The last \code{m} points in \code{param} specify
non-decreasing values from 0 to 1, inclusive, with the cumulative proportion
of spending at the specified timepoints.}
}
\value{
An object of type \code{spendfn}.  The cumulative spending returned
in \code{sfLinear$spend} is 0 for \code{t <= 0} and \code{alpha} for
\code{t>=1}.  For \code{t} between specified points, linear interpolation is
used to determine \code{sfLinear$spend}.

The cumulative spending returned in \code{sfStep$spend} is 0 for
\code{t<param[1]} and \code{alpha} for \code{t>=1}.  Letting \code{m <-
length(param/2)}, for \code{i=1,2,...m-1} and \code{ param[i]<= t <
param[i+1]}, the cumulative spending is set at \code{alpha * param[i+m]}
(also for \code{param[m]<=t<1}).

Note that if \code{param[2m]} is 1, then the first time an analysis is
performed after the last proportion of final planned information
(\code{param[m]}) will be the final analysis, using any remaining error that
was not previously spent.

See \code{vignette("SpendingFunctionOverview")} for further details.
}
\description{
The function \code{sfLinear()} allows specification of a
piecewise linear spending function. The function \code{sfStep()} specifies
a step function spending function. Both functions provide complete
flexibility in setting spending at desired timepoints in a group sequential
design. Normally these function will be passed to \code{gsDesignCRT()} in the
parameter \code{sfu} for the upper bound or \code{sfl} for the lower bound to
specify a spending function family for a design. When passed to
\code{gsDesignCRT()}, the value of \code{param} would be passed to
\code{sfLinear()} or \code{sfStep()} through the \code{gsDesignCRT()}
arguments \code{sfupar} for the upper bound and \code{sflpar} for the lower
bound.

Note that \code{sfStep()} allows setting a particular level of spending when
the timing is not strictly known; an example shows how this can inflate Type
I error when timing of analyses are changed based on knowing the treatment
effect at an interim.
}
\note{
The gsDesign technical manual is available at
  \url{https://keaven.github.io/gsd-tech-manual/}.
}
\references{
Jennison C and Turnbull BW (2000), \emph{Group Sequential
Methods with Applications to Clinical Trials}. Boca Raton: Chapman and Hall.
}
\seealso{
\code{vignette("SpendingFunctionOverview")},
\code{\link{gsDesignCRT}}, \code{vignette("gsDesignCRTPackageOverview")}
}
\author{
Keaven Anderson \email{keaven_anderson@merck.com}
}
\keyword{design}
